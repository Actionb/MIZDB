# Generated by Django 4.2.14 on 2024-08-14 07:48

import dbentry.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# dbentry.migrations.0017_removed_alter_bestand_permission

class Migration(migrations.Migration):

    replaces = [('dbentry', '0001_initial'), ('dbentry', '0002_rename_kalendar_to_kalender'), ('dbentry', '0003_video_model'), ('dbentry', '0004_alias_verbose_name_plural'), ('dbentry', '0005_add_model_audio_medium'), ('dbentry', '0006_data_formate_to_audio_medium'), ('dbentry', '0007_delete_format_models'), ('dbentry', '0008_rename_audio_catalog_nr'), ('dbentry', '0009_remove_m2m_through'), ('dbentry', '0010_remove_bestand_bestand_art'), ('dbentry', '0011_remove_video_tracks'), ('dbentry', '0012_audio_video_tweaks'), ('dbentry', '0013_audio_video_original_helptext'), ('dbentry', '0014_add_discogs_to_video'), ('dbentry', '0015_add_default_to_medium_qty'), ('dbentry', '0016_alter_video_medium_unique'), ('dbentry', '0017_removed_alter_bestand_permission'), ('dbentry', '0018_Brochure_model_meta_inheritance'), ('dbentry', '0019_add_audio_land_pressung'), ('dbentry', '0020_ausgabe_video'), ('dbentry', '0021_rename_bildmaterial_plakat'), ('dbentry', '0022_add_model_foto'), ('dbentry', '0023_person_gnd'), ('dbentry', '0024_ausgabe_e_datum_help_text'), ('dbentry', '0025_url_models'), ('dbentry', '0026_url_model_verbose_name')]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('tracks', models.PositiveIntegerField(blank=True, null=True, verbose_name='Anz. Tracks')),
                ('laufzeit', models.DurationField(blank=True, help_text='Format: hh:mm:ss', null=True)),
                ('e_jahr', dbentry.fields.YearField(blank=True, null=True, verbose_name='Jahr')),
                ('quelle', models.CharField(blank=True, help_text='Broadcast, Live, etc.', max_length=200)),
                ('catalog_nr', models.CharField(blank=True, max_length=200, verbose_name='Katalog Nummer')),
                ('release_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Release ID (discogs)')),
                ('discogs_url', models.URLField(blank=True, help_text='Adresse zur discogs.com Seite dieses Objektes.', verbose_name='Link discogs.com')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Mediums')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
            ],
            options={
                'verbose_name_plural': 'Audio Materialien',
                'verbose_name': 'Audio Material',
                'abstract': False,
                'permissions': [('alter_bestand_audio', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Ausgabe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_name', models.CharField(default='No data for %(verbose_name)s.', editable=False, max_length=200)),
                ('_changed_flag', models.BooleanField(default=False, editable=False)),
                ('status', models.CharField(choices=[('unb', 'unbearbeitet'), ('iB', 'in Bearbeitung'), ('abg', 'abgeschlossen'), ('kB', 'keine Bearbeitung vorgesehen')], default='unb', max_length=40, verbose_name='Bearbeitungsstatus')),
                ('e_datum', models.DateField(blank=True, help_text='Format: tt.mm.jjjj', null=True, verbose_name='Erscheinungsdatum')),
                ('jahrgang', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Jahrgang')),
                ('sonderausgabe', models.BooleanField(default=False, verbose_name='Sonderausgabe')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. der Ausgabe')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
            ],
            options={
                'verbose_name_plural': 'Ausgaben',
                'verbose_name': 'Ausgabe',
                'abstract': False,
                'permissions': [('alter_bestand_ausgabe', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['magazin'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_name', models.CharField(default='No data for %(verbose_name)s.', editable=False, max_length=200)),
                ('_changed_flag', models.BooleanField(default=False, editable=False)),
                ('kuerzel', models.CharField(blank=True, max_length=8, verbose_name='Kürzel')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Autors')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
            ],
            options={
                'verbose_name_plural': 'Autoren',
                'verbose_name': 'Autor',
                'abstract': False,
                'ordering': ['_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band_name', models.CharField(max_length=200, verbose_name='Bandname')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. der Band')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
            ],
            options={
                'verbose_name_plural': 'Bands',
                'verbose_name': 'Band',
                'abstract': False,
                'ordering': ['band_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='BaseBrochure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('zusammenfassung', models.TextField(blank=True)),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('ausgabe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='beilagen', to='dbentry.ausgabe', verbose_name='Ausgabe')),
            ],
            options={
                'abstract': False,
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Bildmaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('signatur', models.CharField(blank=True, help_text='Kürzel bestehend aus Angabe zur Größe und einer 5-stelligen fortlaufenden Nummer. Z.B.: DINA2-00395', max_length=200, null=True, unique=True)),
                ('size', models.CharField(blank=True, max_length=200, verbose_name='Größe')),
                ('datum', dbentry.fields.PartialDateField(blank=True, help_text='Teilweise Angaben sind erlaubt (z.B. Jahr & Monat aber ohne Tag).', max_length=10, verbose_name='Zeitangabe')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Bildmaterials')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('band', models.ManyToManyField(to='dbentry.band')),
            ],
            options={
                'verbose_name_plural': 'Bild Materialien',
                'verbose_name': 'Bild Material',
                'abstract': False,
                'permissions': [('alter_bestand_bildmaterial', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Bildreihe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Bildreihen',
                'verbose_name': 'Bildreihe',
                'abstract': False,
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Buch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('titel_orig', models.CharField(blank=True, max_length=200, verbose_name='Titel (Original)')),
                ('seitenumfang', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('jahr', dbentry.fields.YearField(blank=True, null=True, verbose_name='Jahr')),
                ('jahr_orig', dbentry.fields.YearField(blank=True, null=True, verbose_name='Jahr (Original)')),
                ('auflage', models.CharField(blank=True, max_length=200)),
                ('EAN', dbentry.fields.EANField(blank=True, max_length=17)),
                ('ISBN', dbentry.fields.ISBNField(blank=True, max_length=17)),
                ('is_buchband', models.BooleanField(default=False, help_text='Dieses Buch ist ein Sammelband bestehend aus Aufsätzen.', verbose_name='Ist Sammelband')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Buches')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('sprache', models.CharField(blank=True, max_length=200)),
                ('autor', models.ManyToManyField(to='dbentry.autor')),
                ('band', models.ManyToManyField(to='dbentry.band')),
                ('buchband', models.ForeignKey(blank=True, help_text='Der Sammelband, der diesen Aufsatz enthält.', limit_choices_to={'is_buchband': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='buch_set', to='dbentry.buch', verbose_name='Sammelband')),
            ],
            options={
                'verbose_name_plural': 'Bücher',
                'verbose_name': 'Buch',
                'abstract': False,
                'permissions': [('alter_bestand_buch', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Bundesland',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bland_name', models.CharField(max_length=200, verbose_name='Bundesland')),
                ('code', models.CharField(max_length=4)),
            ],
            options={
                'verbose_name_plural': 'Bundesländer',
                'verbose_name': 'Bundesland',
                'abstract': False,
                'ordering': ['land', 'bland_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Datei',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('media_typ', models.CharField(choices=[('audio', 'Audio'), ('video', 'Video'), ('bild', 'Bild'), ('text', 'Text'), ('sonstige', 'Sonstige')], default='audio', max_length=200, verbose_name='Media Typ')),
                ('datei_media', models.FileField(blank=True, editable=False, help_text='Datei auf Datenbank-Server hoch- bzw herunterladen.', null=True, upload_to='', verbose_name='Datei')),
                ('datei_pfad', models.CharField(blank=True, help_text='Pfad (inklusive Datei-Namen und Endung) zur Datei im gemeinsamen Ordner.', max_length=200, verbose_name='Datei-Pfad')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. der Datei')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('band', models.ManyToManyField(to='dbentry.band')),
            ],
            options={
                'verbose_name_plural': 'Dateien',
                'verbose_name': 'Datei',
                'abstract': False,
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Dokument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Dokumentes')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('band', models.ManyToManyField(to='dbentry.band')),
            ],
            options={
                'verbose_name_plural': 'Dokumente',
                'verbose_name': 'Dokument',
                'abstract': False,
                'permissions': [('alter_bestand_dokument', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Geber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Geber',
                'verbose_name': 'Geber',
                'abstract': False,
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=100, unique=True, verbose_name='Genre')),
            ],
            options={
                'verbose_name_plural': 'Genres',
                'verbose_name': 'Genre',
                'abstract': False,
                'ordering': ['genre'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Herausgeber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('herausgeber', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Herausgeber',
                'verbose_name': 'Herausgeber',
                'abstract': False,
                'ordering': ['herausgeber'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(max_length=200, unique=True)),
                ('kuerzel', models.CharField(blank=True, max_length=8, verbose_name='Kürzel')),
            ],
            options={
                'verbose_name_plural': 'Instrumente',
                'verbose_name': 'Instrument',
                'abstract': False,
                'ordering': ['instrument', 'kuerzel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Lagerort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_name', models.CharField(default='No data for %(verbose_name)s.', editable=False, max_length=200)),
                ('_changed_flag', models.BooleanField(default=False, editable=False)),
                ('ort', models.CharField(max_length=200)),
                ('raum', models.CharField(blank=True, max_length=200)),
                ('regal', models.CharField(blank=True, max_length=200)),
                ('fach', models.CharField(blank=True, max_length=200)),
                ('ordner', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Lagerorte',
                'verbose_name': 'Lagerort',
                'abstract': False,
                'ordering': ['_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('land_name', models.CharField(max_length=100, unique=True, verbose_name='Land')),
                ('code', models.CharField(max_length=4, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Länder',
                'verbose_name': 'Land',
                'abstract': False,
                'ordering': ['land_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='m2m_musiker_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.genre')),
            ],
            options={
                'verbose_name_plural': 'Musiker-Genres',
                'db_table': 'dbentry_musiker_genre',
                'verbose_name': 'Musiker-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_musiker_instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.instrument')),
            ],
            options={
                'verbose_name_plural': 'Musiker-Instrumente',
                'db_table': 'dbentry_musiker_instrument',
                'verbose_name': 'Musiker-Instrument',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.ManyToManyField(blank=True, to='dbentry.instrument', verbose_name='Instrumente')),
            ],
            options={
                'verbose_name_plural': 'Video-Musiker',
                'db_table': 'dbentry_video_musiker',
                'verbose_name': 'Video-Musiker',
            },
        ),
        migrations.CreateModel(
            name='Monat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monat', models.CharField(max_length=200, verbose_name='Monat')),
                ('abk', models.CharField(max_length=200, verbose_name='Abk')),
                ('ordinal', models.PositiveSmallIntegerField(editable=False)),
            ],
            options={
                'verbose_name_plural': 'Monate',
                'verbose_name': 'Monat',
                'abstract': False,
                'ordering': ['ordinal'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kuenstler_name', models.CharField(max_length=200, verbose_name='Künstlername')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Musikers')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('genre', models.ManyToManyField(through='dbentry.m2m_musiker_genre', to='dbentry.genre')),
                ('instrument', models.ManyToManyField(through='dbentry.m2m_musiker_instrument', to='dbentry.instrument')),
            ],
            options={
                'verbose_name_plural': 'Musiker',
                'verbose_name': 'Musiker',
                'abstract': False,
                'ordering': ['kuenstler_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_name', models.CharField(default='No data for %(verbose_name)s.', editable=False, max_length=200)),
                ('_changed_flag', models.BooleanField(default=False, editable=False)),
                ('stadt', models.CharField(blank=True, max_length=200)),
                ('bland', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.bundesland', verbose_name='Bundesland')),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dbentry.land')),
            ],
            options={
                'verbose_name_plural': 'Orte',
                'unique_together': {('stadt', 'bland', 'land')},
                'verbose_name': 'Ort',
                'abstract': False,
                'ordering': ['land', 'bland', 'stadt'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_name', models.CharField(default='No data for %(verbose_name)s.', editable=False, max_length=200)),
                ('_changed_flag', models.BooleanField(default=False, editable=False)),
                ('vorname', models.CharField(blank=True, max_length=200)),
                ('nachname', models.CharField(max_length=200)),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. der Person')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('orte', models.ManyToManyField(to='dbentry.ort')),
            ],
            options={
                'verbose_name_plural': 'Personen',
                'verbose_name': 'Person',
                'abstract': False,
                'ordering': ['_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Plattenfirma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Plattenfirmen',
                'verbose_name': 'Plattenfirma',
                'abstract': False,
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Schlagwort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schlagwort', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Schlagwörter',
                'verbose_name': 'Schlagwort',
                'abstract': False,
                'ordering': ['schlagwort'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Schriftenreihe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Schriftenreihen',
                'verbose_name': 'Schriftenreihe',
                'abstract': False,
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Spielort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Spielortes')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('ort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dbentry.ort')),
            ],
            options={
                'verbose_name_plural': 'Spielorte',
                'verbose_name': 'Spielort',
                'abstract': False,
                'ordering': ['name', 'ort'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('datum', dbentry.fields.PartialDateField(blank=True, help_text='Teilweise Angaben sind erlaubt (z.B. Jahr & Monat aber ohne Tag).', max_length=10)),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. der Veranstaltung')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('band', models.ManyToManyField(to='dbentry.band')),
                ('genre', models.ManyToManyField(to='dbentry.genre')),
                ('musiker', models.ManyToManyField(to='dbentry.musiker')),
                ('person', models.ManyToManyField(to='dbentry.person')),
            ],
            options={
                'verbose_name_plural': 'Veranstaltungen',
                'verbose_name': 'Veranstaltung',
                'abstract': False,
                'ordering': ['name', 'datum', 'spielort'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Veranstaltungsreihe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Veranstaltungsreihen',
                'verbose_name': 'Veranstaltungsreihe',
                'abstract': False,
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('tracks', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Anz. Tracks')),
                ('laufzeit', models.DurationField(blank=True, help_text='Format: hh:mm:ss. Beispiel Laufzeit von 144 Minuten: 0:144:0.', null=True)),
                ('quelle', models.CharField(blank=True, help_text='Broadcast, Live, etc.', max_length=200)),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Video Materials')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('band', models.ManyToManyField(to='dbentry.band')),
                ('genre', models.ManyToManyField(to='dbentry.genre')),
                ('musiker', models.ManyToManyField(through='dbentry.m2m_video_musiker', to='dbentry.musiker')),
                ('person', models.ManyToManyField(to='dbentry.person')),
                ('schlagwort', models.ManyToManyField(to='dbentry.schlagwort')),
                ('spielort', models.ManyToManyField(to='dbentry.spielort')),
                ('veranstaltung', models.ManyToManyField(to='dbentry.veranstaltung')),
                ('jahr', dbentry.fields.YearField(blank=True, null=True, verbose_name='Jahr')),
                ('ort', models.ManyToManyField(to='dbentry.ort')),
            ],
            options={
                'verbose_name_plural': 'Video Materialien',
                'verbose_name': 'Video Material',
                'abstract': False,
                'permissions': [('alter_bestand_video', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Verlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verlag_name', models.CharField(max_length=200, verbose_name='Verlag')),
                ('sitz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.ort')),
            ],
            options={
                'verbose_name_plural': 'Verlage',
                'verbose_name': 'Verlag',
                'abstract': False,
                'ordering': ['verlag_name', 'sitz'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.AddField(
            model_name='veranstaltung',
            name='reihe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dbentry.veranstaltungsreihe'),
        ),
        migrations.AddField(
            model_name='veranstaltung',
            name='schlagwort',
            field=models.ManyToManyField(to='dbentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='veranstaltung',
            name='spielort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dbentry.spielort'),
        ),
        migrations.CreateModel(
            name='Technik',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. der Technik')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('band', models.ManyToManyField(to='dbentry.band')),
                ('genre', models.ManyToManyField(to='dbentry.genre')),
                ('musiker', models.ManyToManyField(to='dbentry.musiker')),
                ('ort', models.ManyToManyField(to='dbentry.ort')),
                ('person', models.ManyToManyField(to='dbentry.person')),
                ('schlagwort', models.ManyToManyField(to='dbentry.schlagwort')),
                ('spielort', models.ManyToManyField(to='dbentry.spielort')),
                ('veranstaltung', models.ManyToManyField(to='dbentry.veranstaltung')),
            ],
            options={
                'verbose_name_plural': 'Technik',
                'verbose_name': 'Technik',
                'abstract': False,
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Provenienz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.CharField(choices=[('Schenkung', 'Schenkung'), ('Spende', 'Spende'), ('Fund', 'Fund'), ('Leihgabe', 'Leihgabe'), ('Dauerleihgabe', 'Dauerleihgabe')], default='Schenkung', max_length=100, verbose_name='Art der Provenienz')),
                ('geber', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dbentry.geber')),
            ],
            options={
                'verbose_name_plural': 'Provenienzen',
                'verbose_name': 'Provenienz',
                'abstract': False,
                'ordering': ['geber', 'typ'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.AddField(
            model_name='musiker',
            name='orte',
            field=models.ManyToManyField(to='dbentry.ort'),
        ),
        migrations.AddField(
            model_name='musiker',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.person'),
        ),
        migrations.CreateModel(
            name='Memorabilien',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Memorabiliums')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('band', models.ManyToManyField(to='dbentry.band')),
                ('genre', models.ManyToManyField(to='dbentry.genre')),
                ('musiker', models.ManyToManyField(to='dbentry.musiker')),
                ('ort', models.ManyToManyField(to='dbentry.ort')),
                ('person', models.ManyToManyField(to='dbentry.person')),
                ('schlagwort', models.ManyToManyField(to='dbentry.schlagwort')),
                ('spielort', models.ManyToManyField(to='dbentry.spielort')),
                ('veranstaltung', models.ManyToManyField(to='dbentry.veranstaltung')),
            ],
            options={
                'verbose_name_plural': 'Memorabilien',
                'verbose_name': 'Memorabilia',
                'abstract': False,
                'ordering': ['titel'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Magazin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('magazin_name', models.CharField(max_length=200, verbose_name='Magazin')),
                ('ausgaben_merkmal', models.CharField(blank=True, choices=[('num', 'Nummer'), ('lnum', 'Lfd.Nummer'), ('monat', 'Monat'), ('e_datum', 'Ersch.Datum')], help_text='Das dominante Merkmal der Ausgaben. Diese Angabe bestimmt die Darstellung der Ausgaben in der Änderungsliste.', max_length=8, verbose_name='Ausgaben Merkmal')),
                ('fanzine', models.BooleanField(default=False, verbose_name='Fanzine')),
                ('issn', dbentry.fields.ISSNField(blank=True, help_text='EAN (Barcode Nummer) Angaben erlaubt. Die ISSN wird dann daraus ermittelt.', max_length=9, verbose_name='ISSN')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Magazines')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('orte', models.ManyToManyField(to='dbentry.ort')),
                ('genre', models.ManyToManyField(to='dbentry.genre')),
                ('herausgeber', models.ManyToManyField(to='dbentry.herausgeber')),
                ('verlag', models.ManyToManyField(to='dbentry.verlag')),
            ],
            options={
                'verbose_name_plural': 'Magazine',
                'verbose_name': 'Magazin',
                'abstract': False,
                'ordering': ['magazin_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.AddField(
            model_name='m2m_video_musiker',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_video_musiker',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_musiker_instrument',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_musiker_genre',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.musiker'),
        ),
        migrations.CreateModel(
            name='m2m_datei_quelle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.audio')),
                ('bildmaterial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.bildmaterial')),
                ('buch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.buch')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.datei')),
                ('dokument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.dokument')),
                ('memorabilien', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.memorabilien')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.video')),
            ],
            options={
                'verbose_name_plural': 'Datei-Quellen',
                'verbose_name': 'Datei-Quelle',
                'db_table': 'dbentry_datei_quelle',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.datei')),
                ('instrument', models.ManyToManyField(blank=True, to='dbentry.instrument', verbose_name='Instrumente')),
                ('musiker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.musiker')),
            ],
            options={
                'verbose_name_plural': 'Musiker',
                'verbose_name': 'Musiker',
                'unique_together': {('datei', 'musiker')},
                'db_table': 'dbentry_datei_musiker',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.audio')),
                ('instrument', models.ManyToManyField(blank=True, to='dbentry.instrument', verbose_name='Instrumente')),
                ('musiker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.musiker')),
            ],
            options={
                'verbose_name_plural': 'Audio-Musiker',
                'verbose_name': 'Audio-Musiker',
                'unique_together': {('audio', 'musiker')},
                'db_table': 'dbentry_audio_musiker',
            },
        ),
        migrations.AddField(
            model_name='dokument',
            name='genre',
            field=models.ManyToManyField(to='dbentry.genre'),
        ),
        migrations.AddField(
            model_name='dokument',
            name='musiker',
            field=models.ManyToManyField(to='dbentry.musiker'),
        ),
        migrations.AddField(
            model_name='dokument',
            name='ort',
            field=models.ManyToManyField(to='dbentry.ort'),
        ),
        migrations.AddField(
            model_name='dokument',
            name='person',
            field=models.ManyToManyField(to='dbentry.person'),
        ),
        migrations.AddField(
            model_name='dokument',
            name='schlagwort',
            field=models.ManyToManyField(to='dbentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='dokument',
            name='spielort',
            field=models.ManyToManyField(to='dbentry.spielort'),
        ),
        migrations.AddField(
            model_name='dokument',
            name='veranstaltung',
            field=models.ManyToManyField(to='dbentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='datei',
            name='genre',
            field=models.ManyToManyField(to='dbentry.genre'),
        ),
        migrations.AddField(
            model_name='datei',
            name='musiker',
            field=models.ManyToManyField(through='dbentry.m2m_datei_musiker', to='dbentry.musiker'),
        ),
        migrations.AddField(
            model_name='datei',
            name='ort',
            field=models.ManyToManyField(to='dbentry.ort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='person',
            field=models.ManyToManyField(to='dbentry.person'),
        ),
        migrations.AddField(
            model_name='datei',
            name='provenienz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.provenienz'),
        ),
        migrations.AddField(
            model_name='datei',
            name='schlagwort',
            field=models.ManyToManyField(to='dbentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='spielort',
            field=models.ManyToManyField(to='dbentry.spielort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='veranstaltung',
            field=models.ManyToManyField(to='dbentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='bundesland',
            name='land',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dbentry.land'),
        ),
        migrations.AddField(
            model_name='buch',
            name='genre',
            field=models.ManyToManyField(to='dbentry.genre'),
        ),
        migrations.AddField(
            model_name='buch',
            name='herausgeber',
            field=models.ManyToManyField(to='dbentry.herausgeber'),
        ),
        migrations.AddField(
            model_name='buch',
            name='musiker',
            field=models.ManyToManyField(to='dbentry.musiker'),
        ),
        migrations.AddField(
            model_name='buch',
            name='ort',
            field=models.ManyToManyField(to='dbentry.ort'),
        ),
        migrations.AddField(
            model_name='buch',
            name='person',
            field=models.ManyToManyField(to='dbentry.person'),
        ),
        migrations.AddField(
            model_name='buch',
            name='schlagwort',
            field=models.ManyToManyField(to='dbentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='buch',
            name='schriftenreihe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.schriftenreihe'),
        ),
        migrations.AddField(
            model_name='buch',
            name='spielort',
            field=models.ManyToManyField(to='dbentry.spielort'),
        ),
        migrations.AddField(
            model_name='buch',
            name='veranstaltung',
            field=models.ManyToManyField(to='dbentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='buch',
            name='verlag',
            field=models.ManyToManyField(to='dbentry.verlag'),
        ),
        migrations.CreateModel(
            name='BrochureYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jahr', dbentry.fields.YearField(verbose_name='Jahr')),
                ('brochure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jahre', to='dbentry.basebrochure')),
            ],
            options={
                'verbose_name_plural': 'Jahre',
                'verbose_name': 'Jahr',
                'abstract': False,
                'ordering': ['jahr'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='BrochureURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, verbose_name='Webpage')),
                ('brochure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='dbentry.basebrochure')),
            ],
            options={
                'verbose_name_plural': 'Web-Adressen',
                'verbose_name': 'Web-Adresse',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.AddField(
            model_name='bildmaterial',
            name='genre',
            field=models.ManyToManyField(to='dbentry.genre'),
        ),
        migrations.AddField(
            model_name='bildmaterial',
            name='musiker',
            field=models.ManyToManyField(to='dbentry.musiker'),
        ),
        migrations.AddField(
            model_name='bildmaterial',
            name='ort',
            field=models.ManyToManyField(to='dbentry.ort'),
        ),
        migrations.AddField(
            model_name='bildmaterial',
            name='person',
            field=models.ManyToManyField(to='dbentry.person'),
        ),
        migrations.AddField(
            model_name='bildmaterial',
            name='reihe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dbentry.bildreihe', verbose_name='Bildreihe'),
        ),
        migrations.AddField(
            model_name='bildmaterial',
            name='schlagwort',
            field=models.ManyToManyField(to='dbentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='bildmaterial',
            name='spielort',
            field=models.ManyToManyField(to='dbentry.spielort'),
        ),
        migrations.AddField(
            model_name='bildmaterial',
            name='veranstaltung',
            field=models.ManyToManyField(to='dbentry.veranstaltung'),
        ),
        migrations.CreateModel(
            name='Bestand',
            fields=[
                ('signatur', models.AutoField(primary_key=True, serialize=False)),
                ('audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.audio')),
                ('ausgabe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.ausgabe')),
                ('bildmaterial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.bildmaterial')),
                ('brochure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.basebrochure')),
                ('buch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.buch')),
                ('dokument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.dokument')),
                ('lagerort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dbentry.lagerort')),
                ('memorabilien', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.memorabilien')),
                ('provenienz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.provenienz')),
                ('technik', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.technik')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.video')),
            ],
            options={
                'verbose_name_plural': 'Bestände',
                'verbose_name': 'Bestand',
                'abstract': False,
                'ordering': ['pk'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.AddField(
            model_name='basebrochure',
            name='genre',
            field=models.ManyToManyField(to='dbentry.genre'),
        ),
        migrations.AddField(
            model_name='band',
            name='orte',
            field=models.ManyToManyField(to='dbentry.ort'),
        ),
        migrations.AddField(
            model_name='autor',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dbentry.person'),
        ),
        migrations.AddField(
            model_name='ausgabe',
            name='magazin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dbentry.magazin'),
        ),
        migrations.AddField(
            model_name='audio',
            name='musiker',
            field=models.ManyToManyField(through='dbentry.m2m_audio_musiker', to='dbentry.musiker'),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_musiker',
            unique_together={('video', 'musiker')},
        ),
        migrations.AlterUniqueTogether(
            name='bundesland',
            unique_together={('bland_name', 'land')},
        ),
        migrations.CreateModel(
            name='Brochure',
            fields=[
                ('basebrochure_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbentry.basebrochure')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. der Broschüre')),
                ('schlagwort', models.ManyToManyField(to='dbentry.schlagwort')),
            ],
            options={
                'verbose_name_plural': 'Broschüren',
                'verbose_name': 'Broschüre',
            },
            bases=('dbentry.basebrochure',),
        ),
        migrations.CreateModel(
            name='AusgabeNum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.PositiveSmallIntegerField(verbose_name='Nummer')),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.ausgabe')),
            ],
            options={
                'verbose_name_plural': 'Ausgabennummer',
                'unique_together': {('num', 'ausgabe')},
                'verbose_name': 'Nummer',
                'abstract': False,
                'ordering': ['num'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='AusgabeMonat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.ausgabe')),
                ('monat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.monat')),
            ],
            options={
                'verbose_name_plural': 'Ausgabe-Monate',
                'unique_together': {('ausgabe', 'monat')},
                'verbose_name': 'Ausgabe-Monat',
                'abstract': False,
                'ordering': ['monat'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='AusgabeLnum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lnum', models.PositiveSmallIntegerField(verbose_name='Lfd. Nummer')),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.ausgabe')),
            ],
            options={
                'verbose_name_plural': 'Laufende Nummer',
                'unique_together': {('lnum', 'ausgabe')},
                'verbose_name': 'lfd. Nummer',
                'abstract': False,
                'ordering': ['lnum'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='AusgabeJahr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jahr', dbentry.fields.YearField(verbose_name='Jahr')),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.ausgabe')),
            ],
            options={
                'verbose_name_plural': 'Jahre',
                'unique_together': {('jahr', 'ausgabe')},
                'verbose_name': 'Jahr',
                'abstract': False,
                'ordering': ['jahr'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Kalender',
            fields=[
                ('basebrochure_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbentry.basebrochure')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Programmheftes')),
                ('spielort', models.ManyToManyField(to='dbentry.spielort')),
                ('veranstaltung', models.ManyToManyField(to='dbentry.veranstaltung')),
            ],
            options={
                'verbose_name_plural': 'Programmhefte',
                'verbose_name': 'Programmheft',
            },
            bases=('dbentry.basebrochure',),
        ),
        migrations.CreateModel(
            name='VideoMedium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medium', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name': 'Video-Medium',
                'abstract': False,
                'ordering': ['medium'],
                'verbose_name_plural': 'Video-Medium',
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.AlterField(
            model_name='audio',
            name='beschreibung',
            field=models.TextField(blank=True, help_text='Beschreibung bzgl. des Audio Materials'),
        ),
        migrations.AlterField(
            model_name='audio',
            name='laufzeit',
            field=models.DurationField(blank=True, help_text='Format: hh:mm:ss. Beispiel Laufzeit von 144 Minuten: 0:144:0.', null=True),
        ),
        migrations.AddField(
            model_name='video',
            name='medium',
            field=models.ForeignKey(blank=True, help_text='Format des Speichermediums.', null=True, on_delete=django.db.models.deletion.PROTECT, to='dbentry.videomedium', verbose_name='Speichermedium'),
        ),
        migrations.CreateModel(
            name='BandAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.band')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
                'verbose_name': 'Alias',
                'abstract': False,
                'ordering': ['alias'],
                'verbose_name_plural': 'Aliases',
            },
        ),
        migrations.CreateModel(
            name='GenreAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.genre')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
                'verbose_name': 'Alias',
                'abstract': False,
                'ordering': ['alias'],
                'verbose_name_plural': 'Aliases',
            },
        ),
        migrations.CreateModel(
            name='MusikerAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.musiker')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
                'verbose_name': 'Alias',
                'abstract': False,
                'ordering': ['alias'],
                'verbose_name_plural': 'Aliases',
            },
        ),
        migrations.CreateModel(
            name='SchlagwortAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.schlagwort')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
                'verbose_name': 'Alias',
                'abstract': False,
                'ordering': ['alias'],
                'verbose_name_plural': 'Aliases',
            },
        ),
        migrations.CreateModel(
            name='SpielortAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.spielort')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
                'verbose_name': 'Alias',
                'abstract': False,
                'ordering': ['alias'],
                'verbose_name_plural': 'Aliases',
            },
        ),
        migrations.CreateModel(
            name='VeranstaltungAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbentry.veranstaltung')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
                'verbose_name': 'Alias',
                'abstract': False,
                'ordering': ['alias'],
                'verbose_name_plural': 'Aliases',
            },
        ),
        migrations.CreateModel(
            name='AudioMedium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medium', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Audio-Medium',
                'verbose_name': 'Audio-Medium',
                'ordering': ['medium'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='audio',
            name='medium',
            field=models.ForeignKey(blank=True, help_text='Format des Speichermediums.', null=True, on_delete=django.db.models.deletion.PROTECT, to='dbentry.audiomedium', verbose_name='Speichermedium'),
        ),
        migrations.CreateModel(
            name='Katalog',
            fields=[
                ('basebrochure_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dbentry.basebrochure')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Kataloges')),
                ('art', models.CharField(choices=[('merch', 'Merchandise'), ('tech', 'Instrumente & Technik'), ('ton', 'Tonträger'), ('buch', 'Bücher'), ('other', 'Anderes')], default='merch', max_length=40, verbose_name='Art d. Kataloges')),
            ],
            options={
                'verbose_name_plural': 'Warenkataloge',
                'verbose_name': 'Warenkatalog',
            },
            bases=('dbentry.basebrochure',),
        ),
        migrations.RenameField(
            model_name='audio',
            old_name='catalog_nr',
            new_name='plattennummer',
        ),
        migrations.AlterField(
            model_name='audio',
            name='plattennummer',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.CreateModel(
            name='MagazinURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, verbose_name='Webpage')),
                ('magazin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='dbentry.magazin')),
            ],
            options={
                'verbose_name_plural': 'Web-Adressen',
                'verbose_name': 'Web-Adresse',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='Artikel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schlagzeile', models.CharField(max_length=200)),
                ('seite', models.PositiveSmallIntegerField()),
                ('seitenumfang', models.CharField(blank=True, choices=[('f', 'f'), ('ff', 'ff')], default='', help_text='Zwei Seiten: f; mehr als zwei Seiten: ff.', max_length=3)),
                ('zusammenfassung', models.TextField(blank=True)),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Artikels')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dbentry.ausgabe')),
                ('autor', models.ManyToManyField(to='dbentry.autor')),
                ('band', models.ManyToManyField(to='dbentry.band')),
                ('genre', models.ManyToManyField(to='dbentry.genre')),
            ],
            options={
                'verbose_name_plural': 'Artikel',
                'verbose_name': 'Artikel',
                'abstract': False,
                'ordering': ['ausgabe__magazin__magazin_name', 'ausgabe___name', 'seite', 'schlagzeile'],
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.RemoveField(
            model_name='musiker',
            name='genre',
        ),
        migrations.RemoveField(
            model_name='musiker',
            name='instrument',
        ),
        migrations.AlterUniqueTogether(
            name='m2m_musiker_instrument',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='m2m_musiker_instrument',
            name='instrument',
        ),
        migrations.RemoveField(
            model_name='m2m_musiker_instrument',
            name='musiker',
        ),
        migrations.DeleteModel(
            name='m2m_musiker_genre',
        ),
        migrations.AddField(
            model_name='artikel',
            name='musiker',
            field=models.ManyToManyField(to='dbentry.musiker'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='ort',
            field=models.ManyToManyField(to='dbentry.ort'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='person',
            field=models.ManyToManyField(to='dbentry.person'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='schlagwort',
            field=models.ManyToManyField(to='dbentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='spielort',
            field=models.ManyToManyField(to='dbentry.spielort'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='veranstaltung',
            field=models.ManyToManyField(to='dbentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='audio',
            name='band',
            field=models.ManyToManyField(to='dbentry.band'),
        ),
        migrations.AddField(
            model_name='audio',
            name='genre',
            field=models.ManyToManyField(to='dbentry.genre'),
        ),
        migrations.AddField(
            model_name='audio',
            name='ort',
            field=models.ManyToManyField(to='dbentry.ort'),
        ),
        migrations.AddField(
            model_name='audio',
            name='person',
            field=models.ManyToManyField(to='dbentry.person'),
        ),
        migrations.AddField(
            model_name='audio',
            name='plattenfirma',
            field=models.ManyToManyField(to='dbentry.plattenfirma'),
        ),
        migrations.AddField(
            model_name='audio',
            name='schlagwort',
            field=models.ManyToManyField(to='dbentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='audio',
            name='spielort',
            field=models.ManyToManyField(to='dbentry.spielort'),
        ),
        migrations.AddField(
            model_name='audio',
            name='veranstaltung',
            field=models.ManyToManyField(to='dbentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='ausgabe',
            name='audio',
            field=models.ManyToManyField(to='dbentry.audio'),
        ),
        migrations.AddField(
            model_name='autor',
            name='magazin',
            field=models.ManyToManyField(to='dbentry.magazin'),
        ),
        migrations.AddField(
            model_name='band',
            name='genre',
            field=models.ManyToManyField(to='dbentry.genre'),
        ),
        migrations.AddField(
            model_name='band',
            name='musiker',
            field=models.ManyToManyField(to='dbentry.musiker'),
        ),
        migrations.AddField(
            model_name='musiker',
            name='genre',
            field=models.ManyToManyField(to='dbentry.genre'),
        ),
        migrations.AddField(
            model_name='musiker',
            name='instrument',
            field=models.ManyToManyField(to='dbentry.instrument'),
        ),
        migrations.DeleteModel(
            name='m2m_musiker_instrument',
        ),
        migrations.RemoveField(
            model_name='video',
            name='tracks',
        ),
        migrations.RenameField(
            model_name='audio',
            old_name='e_jahr',
            new_name='jahr',
        ),
        migrations.AlterField(
            model_name='audio',
            name='quelle',
            field=models.CharField(blank=True, help_text='Angaben zur Herkunft/Qualität der Aufnahme: z.B. Broadcast, Live, etc.', max_length=200),
        ),
        migrations.AlterField(
            model_name='video',
            name='quelle',
            field=models.CharField(blank=True, help_text='Angaben zur Herkunft/Qualität der Aufnahme: z.B. Broadcast, Live, etc.', max_length=200),
        ),
        migrations.AddField(
            model_name='audio',
            name='original',
            field=models.BooleanField(default=False, help_text='Ist das vorliegende Material ein Original?', verbose_name='Originalmaterial'),
        ),
        migrations.AddField(
            model_name='video',
            name='original',
            field=models.BooleanField(default=False, help_text='Ist das vorliegende Material ein Original?', verbose_name='Originalmaterial'),
        ),
        migrations.AddField(
            model_name='video',
            name='discogs_url',
            field=models.URLField(blank=True, help_text='Adresse zur discogs.com Seite dieses Objektes.', verbose_name='Link discogs.com'),
        ),
        migrations.AddField(
            model_name='video',
            name='release_id',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Release ID (discogs)'),
        ),
        migrations.AddField(
            model_name='audio',
            name='medium_qty',
            field=models.PositiveSmallIntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Anzahl'),
        ),
        migrations.AddField(
            model_name='video',
            name='medium_qty',
            field=models.PositiveSmallIntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Anzahl'),
        ),
        migrations.AlterModelOptions(
            name='audio',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'ordering': ['titel'], 'verbose_name': 'Audio Material', 'verbose_name_plural': 'Audio Materialien'},
        ),
        migrations.AlterModelOptions(
            name='ausgabe',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'ordering': ['magazin'], 'verbose_name': 'Ausgabe', 'verbose_name_plural': 'Ausgaben'},
        ),
        migrations.AlterModelOptions(
            name='bildmaterial',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'ordering': ['titel'], 'verbose_name': 'Bild Material', 'verbose_name_plural': 'Bild Materialien'},
        ),
        migrations.AlterModelOptions(
            name='buch',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'ordering': ['titel'], 'verbose_name': 'Buch', 'verbose_name_plural': 'Bücher'},
        ),
        migrations.AlterModelOptions(
            name='dokument',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'ordering': ['titel'], 'verbose_name': 'Dokument', 'verbose_name_plural': 'Dokumente'},
        ),
        migrations.AlterModelOptions(
            name='video',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'ordering': ['titel'], 'verbose_name': 'Video Material', 'verbose_name_plural': 'Video Materialien'},
        ),
        # migrations.RunPython(
        #     code=dbentry.migrations.0017_removed_alter_bestand_permission.delete_permissions,
        #     reverse_code=django.db.migrations.operations.special.RunPython.noop,
        # ),
        migrations.AlterModelOptions(
            name='brochure',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'verbose_name': 'Broschüre', 'verbose_name_plural': 'Broschüren'},
        ),
        migrations.AlterModelOptions(
            name='kalender',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'verbose_name': 'Programmheft', 'verbose_name_plural': 'Programmhefte'},
        ),
        migrations.AlterModelOptions(
            name='katalog',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'verbose_name': 'Warenkatalog', 'verbose_name_plural': 'Warenkataloge'},
        ),
        migrations.AddField(
            model_name='audio',
            name='land_pressung',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dbentry.land', verbose_name='Land der Pressung'),
        ),
        migrations.AddField(
            model_name='ausgabe',
            name='video',
            field=models.ManyToManyField(to='dbentry.video'),
        ),
        migrations.RenameModel(
            old_name='Bildmaterial',
            new_name='Plakat',
        ),
        migrations.AlterModelOptions(
            name='plakat',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'ordering': ['titel'], 'verbose_name': 'Plakat', 'verbose_name_plural': 'Plakate'},
        ),
        migrations.RenameField(
            model_name='bestand',
            old_name='bildmaterial',
            new_name='plakat',
        ),
        migrations.RenameField(
            model_name='m2m_datei_quelle',
            old_name='bildmaterial',
            new_name='plakat',
        ),
        migrations.AlterField(
            model_name='plakat',
            name='beschreibung',
            field=models.TextField(blank=True, help_text='Beschreibung bzgl. des Plakates'),
        ),
        migrations.CreateModel(
            name='Foto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('size', models.CharField(blank=True, max_length=200, verbose_name='Größe')),
                ('datum', dbentry.fields.PartialDateField(blank=True, help_text='Teilweise Angaben sind erlaubt (z.B. Jahr & Monat aber ohne Tag).', max_length=10, verbose_name='Zeitangabe')),
                ('typ', models.CharField(choices=[('negativ', 'negativ'), ('positiv', 'positiv'), ('reprint', 'Neuabzug (reprint)'), ('polaroid', 'Polaroid')], default='negativ', max_length=100, verbose_name='Art des Fotos')),
                ('farbe', models.BooleanField(verbose_name='Farbfoto')),
                ('owner', models.CharField(blank=True, max_length=200, verbose_name='Rechteinhaber')),
                ('beschreibung', models.TextField(blank=True, help_text='Beschreibung bzgl. des Fotos')),
                ('bemerkungen', models.TextField(blank=True, help_text='Kommentare für Archiv-Mitarbeiter')),
                ('band', models.ManyToManyField(to='dbentry.band')),
                ('genre', models.ManyToManyField(to='dbentry.genre')),
                ('musiker', models.ManyToManyField(to='dbentry.musiker')),
                ('ort', models.ManyToManyField(to='dbentry.ort')),
                ('person', models.ManyToManyField(to='dbentry.person')),
                ('reihe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dbentry.bildreihe', verbose_name='Bildreihe')),
                ('schlagwort', models.ManyToManyField(to='dbentry.schlagwort')),
                ('spielort', models.ManyToManyField(to='dbentry.spielort')),
                ('veranstaltung', models.ManyToManyField(to='dbentry.veranstaltung')),
            ],
            options={
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
                'verbose_name': 'Foto',
                'verbose_name_plural': 'Fotos',
                'ordering': ['titel'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bestand',
            name='foto',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dbentry.foto'),
        ),
        migrations.AddField(
            model_name='person',
            name='dnb_url',
            field=models.URLField(blank=True, help_text='Adresse zur Seite dieser Person in der Deutschen Nationalbibliothek.', verbose_name='Link DNB'),
        ),
        migrations.AddField(
            model_name='person',
            name='gnd_id',
            field=models.CharField(blank=True, max_length=20, verbose_name='Normdatei ID'),
        ),
        migrations.AddField(
            model_name='person',
            name='gnd_name',
            field=models.CharField(blank=True, max_length=200, verbose_name='Normdatei Name'),
        ),
        migrations.AlterField(
            model_name='ausgabe',
            name='e_datum',
            field=models.DateField(blank=True, help_text='Format: TT.MM.JJJJ oder JJJJ-MM-TT (ISO 8601)', null=True, verbose_name='Erscheinungsdatum'),
        ),
        migrations.CreateModel(
            name='AutorURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, verbose_name='Webpage')),
                ('brochure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='dbentry.autor')),
            ],
            options={
                'verbose_name': 'Webseite',
                'verbose_name_plural': 'Webseiten',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='BandURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, verbose_name='Webpage')),
                ('brochure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='dbentry.band')),
            ],
            options={
                'verbose_name': 'Webseite',
                'verbose_name_plural': 'Webseiten',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.AlterModelOptions(
            name='brochureurl',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'verbose_name': 'Webseite', 'verbose_name_plural': 'Webseiten'},
        ),
        migrations.AlterModelOptions(
            name='magazinurl',
            options={'default_permissions': ('add', 'change', 'delete', 'merge', 'view'), 'verbose_name': 'Webseite', 'verbose_name_plural': 'Webseiten'},
        ),
        migrations.CreateModel(
            name='MusikerURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, verbose_name='Webpage')),
                ('brochure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='dbentry.musiker')),
            ],
            options={
                'verbose_name': 'Webseite',
                'verbose_name_plural': 'Webseiten',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='PersonURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, verbose_name='Webpage')),
                ('brochure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='dbentry.person')),
            ],
            options={
                'verbose_name': 'Webseite',
                'verbose_name_plural': 'Webseiten',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='SpielortURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, verbose_name='Webpage')),
                ('brochure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='dbentry.spielort')),
            ],
            options={
                'verbose_name': 'Webseite',
                'verbose_name_plural': 'Webseiten',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
        migrations.CreateModel(
            name='VeranstaltungURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, verbose_name='Webpage')),
                ('brochure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='urls', to='dbentry.veranstaltung')),
            ],
            options={
                'verbose_name': 'Webseite',
                'verbose_name_plural': 'Webseiten',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge', 'view'),
            },
        ),
    ]
