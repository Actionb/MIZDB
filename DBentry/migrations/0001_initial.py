# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-02-19 09:14
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='artikel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schlagzeile', models.CharField(max_length=200)),
                ('seite', models.PositiveSmallIntegerField(verbose_name='Seite')),
                ('seitenumfang', models.CharField(blank=True, choices=[('f', 'f'), ('ff', 'ff')], default='', max_length=3)),
                ('zusammenfassung', models.TextField(blank=True)),
                ('info', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Artikel',
                'ordering': ['seite', 'ausgabe', 'pk'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Artikel',
            },
        ),
        migrations.CreateModel(
            name='audio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('tracks', models.IntegerField(blank=True, null=True, verbose_name='Anz. Tracks')),
                ('laufzeit', models.DurationField(blank=True, null=True)),
                ('e_jahr', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Erscheinungsjahr')),
                ('quelle', models.CharField(blank=True, help_text='Broadcast, Live, etc.', max_length=200)),
                ('catalog_nr', models.CharField(blank=True, max_length=200, verbose_name='Katalog Nummer')),
                ('release_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Release ID (discogs)')),
                ('discogs_url', models.URLField(blank=True, null=True, verbose_name='Link discogs.com')),
                ('bemerkungen', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Audio Material',
                'permissions': [('alter_bestand_audio', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'verbose_name_plural': 'Audio Materialien',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='ausgabe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('unb', 'unbearbeitet'), ('iB', 'in Bearbeitung'), ('abg', 'abgeschlossen')], default=1, max_length=40, verbose_name='Bearbeitungsstatus')),
                ('e_datum', models.DateField(blank=True, help_text='Format: tt.mm.jjjj', null=True, verbose_name='Erscheinungsdatum')),
                ('jahrgang', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Jahrgang')),
                ('info', models.TextField(blank=True, max_length=200)),
                ('sonderausgabe', models.BooleanField(default=False, verbose_name='Sonderausgabe')),
            ],
            options={
                'verbose_name': 'Ausgabe',
                'permissions': [('alter_bestand_ausgabe', 'Aktion: Bestand/Dublette hinzufügen.'), ('alter_data_ausgabe', 'Aktion: Daten verändern.')],
                'ordering': ['magazin', 'jahrgang'],
                'verbose_name_plural': 'Ausgaben',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='ausgabe_jahr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jahr', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(2019), django.core.validators.MinValueValidator(1899)], verbose_name='Jahr')),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ausgabe')),
            ],
            options={
                'verbose_name': 'Jahr',
                'ordering': ['jahr'],
                'verbose_name_plural': 'Jahre',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='ausgabe_lnum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lnum', models.IntegerField(verbose_name='Lfd. Nummer')),
                ('kuerzel', models.CharField(blank=True, max_length=200)),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ausgabe')),
            ],
            options={
                'verbose_name': 'lfd. Nummer',
                'ordering': ['lnum'],
                'verbose_name_plural': 'Laufende Nummer',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='ausgabe_monat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ausgabe')),
            ],
            options={
                'verbose_name': 'Monat',
                'ordering': ['monat'],
                'verbose_name_plural': 'Monate',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='ausgabe_num',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField(verbose_name='Nummer')),
                ('kuerzel', models.CharField(blank=True, max_length=200)),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ausgabe')),
            ],
            options={
                'verbose_name': 'Nummer',
                'ordering': ['num'],
                'verbose_name_plural': 'Ausgabennummer',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='autor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kuerzel', models.CharField(blank=True, max_length=200, verbose_name='Kürzel')),
            ],
            options={
                'verbose_name': 'Autor',
                'ordering': ['person__vorname', 'person__nachname'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Autoren',
            },
        ),
        migrations.CreateModel(
            name='band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band_name', models.CharField(max_length=200, verbose_name='Bandname')),
                ('beschreibung', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Band',
                'ordering': ['band_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Bands',
            },
        ),
        migrations.CreateModel(
            name='band_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='bestand',
            fields=[
                ('signatur', models.AutoField(primary_key=True, serialize=False)),
                ('bestand_art', models.CharField(choices=[('audio', 'Audio'), ('ausgabe', 'Ausgabe'), ('bildmaterial', 'Bildmaterial'), ('buch', 'Buch'), ('dokument', 'Dokument'), ('memorabilien', 'Memorabilien'), ('technik', 'Technik'), ('video', 'Video')], default='ausgabe', max_length=20, verbose_name='Bestand-Art')),
                ('audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
                ('ausgabe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.ausgabe')),
            ],
            options={
                'verbose_name': 'Bestand',
                'ordering': ['pk'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Bestände',
            },
        ),
        migrations.CreateModel(
            name='bildmaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Bild Material',
                'permissions': [('alter_bestand_bildmaterial', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'verbose_name_plural': 'Bild Materialien',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='buch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('titel_orig', models.CharField(blank=True, max_length=200, verbose_name='Titel (Original)')),
                ('jahr', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2019)])),
                ('jahr_orig', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2019)], verbose_name='Jahr (Original)')),
                ('ausgabe', models.CharField(blank=True, max_length=200)),
                ('auflage', models.CharField(blank=True, max_length=200)),
                ('buch_band', models.CharField(blank=True, max_length=200, verbose_name='Buch Band')),
                ('ubersetzer', models.CharField(blank=True, max_length=200, verbose_name='Übersetzer')),
                ('EAN', models.CharField(blank=True, max_length=200)),
                ('ISBN', models.CharField(blank=True, max_length=200)),
                ('LCCN', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Buch',
                'permissions': [('alter_bestand_buch', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'verbose_name_plural': 'Bücher',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='buch_serie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serie', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Buchserie',
                'ordering': ['serie'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Buchserien',
            },
        ),
        migrations.CreateModel(
            name='bundesland',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bland_name', models.CharField(max_length=200, verbose_name='Bundesland')),
                ('code', models.CharField(max_length=4)),
            ],
            options={
                'verbose_name': 'Bundesland',
                'ordering': ['land', 'bland_name'],
                'verbose_name_plural': 'Bundesländer',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='datei',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('media_typ', models.CharField(choices=[('audio', 'Audio'), ('video', 'Video'), ('bild', 'Bild'), ('text', 'Text'), ('sonstige', 'Sonstige')], default='audio', max_length=200, verbose_name='Media Typ')),
                ('datei_media', models.FileField(blank=True, editable=False, help_text='Datei auf Datenbank-Server hoch- bzw herunterladen.', null=True, upload_to='', verbose_name='Datei')),
                ('datei_pfad', models.CharField(blank=True, help_text='Pfad (inklusive Datei-Namen und Endung) zur Datei im gemeinsamen Ordner.', max_length=200, verbose_name='Datei-Pfad')),
                ('beschreibung', models.TextField(blank=True)),
                ('datum', models.DateField(blank=True, null=True)),
                ('bemerkungen', models.TextField(blank=True)),
                ('quelle', models.CharField(blank=True, help_text='z.B. Broadcast, Live, etc.', max_length=200)),
            ],
            options={
                'verbose_name': 'Datei',
                'verbose_name_plural': 'Dateien',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='dokument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Dokument',
                'permissions': [('alter_bestand_dokument', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'verbose_name_plural': 'Dokumente',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='Favoriten',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format_name', models.CharField(blank=True, editable=False, max_length=200)),
                ('anzahl', models.PositiveSmallIntegerField(default=1)),
                ('catalog_nr', models.CharField(blank=True, max_length=200, verbose_name='Katalog Nummer')),
                ('tape', models.CharField(blank=True, max_length=200)),
                ('channel', models.CharField(blank=True, choices=[('Stereo', 'Stereo'), ('Mono', 'Mono'), ('Quad', 'Quadraphonic'), ('Ambi', 'Ambisonic'), ('Multi', 'Multichannel')], max_length=200)),
                ('bemerkungen', models.TextField(blank=True)),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
            ],
            options={
                'verbose_name': 'Format',
                'verbose_name_plural': 'Formate',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='FormatSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Format-Größe',
                'ordering': ['size'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Format-Größen',
            },
        ),
        migrations.CreateModel(
            name='FormatTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=200)),
                ('abk', models.CharField(blank=True, max_length=200, verbose_name='Abkürzung')),
            ],
            options={
                'verbose_name': 'Format-Tag',
                'ordering': ['tag'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Format-Tags',
            },
        ),
        migrations.CreateModel(
            name='FormatTyp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Format-Typ',
                'ordering': ['typ'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Format-Typen',
            },
        ),
        migrations.CreateModel(
            name='geber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='unbekannt', max_length=200)),
            ],
            options={
                'verbose_name': 'Geber',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Geber',
            },
        ),
        migrations.CreateModel(
            name='genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=100, unique=True, verbose_name='Genre')),
                ('ober', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='obergenre', to='DBentry.genre', verbose_name='Oberbegriff')),
            ],
            options={
                'verbose_name': 'Genre',
                'ordering': ['genre'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Genres',
            },
        ),
        migrations.CreateModel(
            name='genre_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.CharField(max_length=200, unique=True)),
                ('kuerzel', models.CharField(max_length=200, verbose_name='Kürzel')),
            ],
            options={
                'verbose_name': 'Instrument',
                'ordering': ['instrument', 'kuerzel'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Instrumente',
            },
        ),
        migrations.CreateModel(
            name='instrument_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.instrument')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='kreis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('bland', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.bundesland')),
            ],
            options={
                'verbose_name': 'Kreis',
                'ordering': ['name', 'bland'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Kreise',
            },
        ),
        migrations.CreateModel(
            name='lagerort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ort', models.CharField(max_length=200)),
                ('raum', models.CharField(blank=True, max_length=200)),
                ('regal', models.CharField(blank=True, max_length=200)),
                ('signatur', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Lagerort',
                'ordering': ['ort'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Lagerorte',
            },
        ),
        migrations.CreateModel(
            name='land',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('land_name', models.CharField(max_length=100, unique=True, verbose_name='Land')),
                ('code', models.CharField(max_length=4, unique=True)),
            ],
            options={
                'verbose_name': 'Land',
                'ordering': ['land_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Länder',
            },
        ),
        migrations.CreateModel(
            name='land_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.land')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_autor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.autor')),
            ],
            options={
                'db_table': 'DBentry_artikel_autor',
                'verbose_name_plural': 'Artikel-Autoren',
                'verbose_name': 'Artikel-Autor',
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
            ],
            options={
                'db_table': 'DBentry_artikel_band',
                'verbose_name_plural': 'Artikel-Bands',
                'verbose_name': 'Artikel-Band',
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'db_table': 'DBentry_artikel_genre',
                'verbose_name_plural': 'Artikel-Genres',
                'verbose_name': 'Artikel-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
            ],
            options={
                'db_table': 'DBentry_artikel_musiker',
                'verbose_name_plural': 'Artikel-Musiker',
                'verbose_name': 'Artikel-Musiker',
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
            ],
            options={
                'db_table': 'DBentry_artikel_ort',
                'verbose_name_plural': 'Artikel-Orte',
                'verbose_name': 'Artikel-Ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
            ],
            options={
                'db_table': 'DBentry_artikel_person',
                'verbose_name_plural': 'Artikel-Personen',
                'verbose_name': 'Artikel-Person',
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_schlagwort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
            ],
            options={
                'db_table': 'DBentry_artikel_schlagwort',
                'verbose_name_plural': 'Artikel-Schlagwörter',
                'verbose_name': 'Artikel-Schlagwort',
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_spielort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
            ],
            options={
                'db_table': 'DBentry_artikel_spielort',
                'verbose_name_plural': 'Artikel-Spielorte',
                'verbose_name': 'Artikel-Spielort',
            },
        ),
        migrations.CreateModel(
            name='m2m_artikel_veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.artikel')),
            ],
            options={
                'db_table': 'DBentry_artikel_veranstaltung',
                'verbose_name_plural': 'Artikel-Veranstaltungen',
                'verbose_name': 'Artikel-Veranstaltung',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_ausgabe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
                ('ausgabe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ausgabe')),
            ],
            options={
                'db_table': 'DBentry_audio_ausgabe',
                'verbose_name_plural': 'Musik-Beilagen',
                'verbose_name': 'Musik-Beilage',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
            ],
            options={
                'db_table': 'DBentry_audio_band',
                'verbose_name_plural': 'Audio-Bands',
                'verbose_name': 'Audio-Band',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'db_table': 'DBentry_audio_genre',
                'verbose_name_plural': 'Audio-Genres',
                'verbose_name': 'Audio-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
                ('instrument', models.ManyToManyField(blank=True, to='DBentry.instrument', verbose_name='Instrumente')),
            ],
            options={
                'db_table': 'DBentry_audio_musiker',
                'verbose_name_plural': 'Audio-Musiker',
                'verbose_name': 'Audio-Musiker',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
            ],
            options={
                'db_table': 'DBentry_audio_ort',
                'verbose_name_plural': 'Audio-Orte',
                'verbose_name': 'Audio-Ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
            ],
            options={
                'db_table': 'DBentry_audio_person',
                'verbose_name_plural': 'Audio-Personen',
                'verbose_name': 'Audio-Person',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_plattenfirma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
            ],
            options={
                'db_table': 'DBentry_audio_plattenfirma',
                'verbose_name_plural': 'Audio-Plattenfirmen',
                'verbose_name': 'Audio-Plattenfirma',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_schlagwort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
            ],
            options={
                'db_table': 'DBentry_audio_schlagwort',
                'verbose_name_plural': 'Audio-Schlagworte',
                'verbose_name': 'Audio-Schlagwort',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_spielort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
            ],
            options={
                'db_table': 'DBentry_audio_spielort',
                'verbose_name_plural': 'Audio-Spielorte',
                'verbose_name': 'Audio-Spielort',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio')),
            ],
            options={
                'db_table': 'DBentry_audio_veranstaltung',
                'verbose_name_plural': 'Audio-Veranstaltungen',
                'verbose_name': 'Audio-Veranstaltung',
            },
        ),
        migrations.CreateModel(
            name='m2m_autor_magazin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.autor')),
            ],
            options={
                'db_table': 'DBentry_autor_magazin',
                'verbose_name_plural': 'Autor-Magazine',
                'verbose_name': 'Autor-Magazin',
            },
        ),
        migrations.CreateModel(
            name='m2m_band_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'db_table': 'DBentry_band_genre',
                'verbose_name_plural': 'Band-Genres',
                'verbose_name': 'Band-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_band_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
            ],
            options={
                'db_table': 'DBentry_band_musiker',
                'verbose_name_plural': 'Band-Mitglieder',
                'verbose_name': 'Band-Mitglied',
            },
        ),
        migrations.CreateModel(
            name='m2m_bildmaterial_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bildmaterial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.bildmaterial')),
            ],
            options={
                'db_table': 'DBentry_bildmaterial_ort',
                'verbose_name_plural': 'Bildmaterial-Orte',
                'verbose_name': 'Bildmaterial-Ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_buch_autor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.autor')),
                ('buch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.buch')),
            ],
            options={
                'db_table': 'DBentry_buch_autor',
                'verbose_name_plural': 'Buch-Autoren',
                'verbose_name': 'Buch-Autor',
            },
        ),
        migrations.CreateModel(
            name='m2m_buch_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.buch')),
            ],
            options={
                'db_table': 'DBentry_buch_ort',
                'verbose_name_plural': 'buch-Orte',
                'verbose_name': 'buch-Ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
            ],
            options={
                'db_table': 'DBentry_datei_band',
                'verbose_name_plural': 'Datei-Bands',
                'verbose_name': 'Datei-Band',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'db_table': 'DBentry_datei_genre',
                'verbose_name_plural': 'Datei-Genres',
                'verbose_name': 'Datei-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('instrument', models.ManyToManyField(blank=True, to='DBentry.instrument', verbose_name='Instrumente')),
            ],
            options={
                'db_table': 'DBentry_datei_musiker',
                'verbose_name_plural': 'Datei-Musiker',
                'verbose_name': 'Datei-Musiker',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
            ],
            options={
                'db_table': 'DBentry_datei_ort',
                'verbose_name_plural': 'Datei-Orte',
                'verbose_name': 'Datei-Ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
            ],
            options={
                'db_table': 'DBentry_datei_person',
                'verbose_name_plural': 'Datei-Personen',
                'verbose_name': 'Datei-Person',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_quelle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.audio')),
                ('bildmaterial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.bildmaterial')),
                ('buch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.buch')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('dokument', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.dokument')),
            ],
            options={
                'db_table': 'DBentry_datei_quelle',
                'verbose_name_plural': 'Datei-Quellen',
                'verbose_name': 'Datei-Quelle',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_schlagwort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
            ],
            options={
                'db_table': 'DBentry_datei_schlagwort',
                'verbose_name_plural': 'Datei-Schlagwörter',
                'verbose_name': 'Datei-Schlagwort',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_spielort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
            ],
            options={
                'db_table': 'DBentry_datei_spielort',
                'verbose_name_plural': 'Datei-Spielorte',
                'verbose_name': 'Datei-Spielort',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
            ],
            options={
                'db_table': 'DBentry_datei_veranstaltung',
                'verbose_name_plural': 'Datei-Veranstaltungen',
                'verbose_name': 'Datei-Veranstaltung',
            },
        ),
        migrations.CreateModel(
            name='m2m_dokument_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dokument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.dokument')),
            ],
            options={
                'db_table': 'DBentry_dokument_ort',
                'verbose_name_plural': 'dokument-Orte',
                'verbose_name': 'dokument-Ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_magazin_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'db_table': 'DBentry_magazin_genre',
                'verbose_name_plural': 'Magazin-Genres',
                'verbose_name': 'Magazin-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_memorabilien_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DBentry_memorabilien_ort',
                'verbose_name_plural': 'memorabilien-Orte',
                'verbose_name': 'memorabilien-Ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_musiker_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'db_table': 'DBentry_musiker_genre',
                'verbose_name_plural': 'Musiker-Genres',
                'verbose_name': 'Musiker-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_musiker_instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.instrument')),
            ],
            options={
                'db_table': 'DBentry_musiker_instrument',
                'verbose_name_plural': 'Musiker-Instrumente',
                'verbose_name': 'Musiker-Instrument',
            },
        ),
        migrations.CreateModel(
            name='m2m_veranstaltung_band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
            ],
            options={
                'db_table': 'DBentry_veranstaltung_band',
                'verbose_name_plural': 'Veranstaltung-Bands',
                'verbose_name': 'Veranstaltung-Band',
            },
        ),
        migrations.CreateModel(
            name='m2m_veranstaltung_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'db_table': 'DBentry_veranstaltung_genre',
                'verbose_name_plural': 'Veranstaltung-Genres',
                'verbose_name': 'Veranstaltung-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_veranstaltung_person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DBentry_veranstaltung_person',
                'verbose_name_plural': 'Veranstaltung-Personen',
                'verbose_name': 'Veranstaltung-Person',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
            ],
            options={
                'db_table': 'DBentry_video_band',
                'verbose_name_plural': 'Video-Bands',
                'verbose_name': 'Video-Band',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'db_table': 'DBentry_video_genre',
                'verbose_name_plural': 'Video-Genres',
                'verbose_name': 'Video-Genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DBentry_video_musiker',
                'verbose_name_plural': 'Video-Musiker',
                'verbose_name': 'Video-Musiker',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DBentry_video_ort',
                'verbose_name_plural': 'Video-Orte',
                'verbose_name': 'Video-Ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DBentry_video_person',
                'verbose_name_plural': 'Video-Personen',
                'verbose_name': 'Video-Person',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_schlagwort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DBentry_video_schlagwort',
                'verbose_name_plural': 'Video-Schlagwörter',
                'verbose_name': 'Video-Schlagwort',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_spielort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DBentry_video_spielort',
                'verbose_name_plural': 'Video-Spielorte',
                'verbose_name': 'Video-Spielort',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DBentry_video_veranstaltung',
                'verbose_name_plural': 'Video-Veranstaltungen',
                'verbose_name': 'Video-Veranstaltung',
            },
        ),
        migrations.CreateModel(
            name='magazin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('magazin_name', models.CharField(max_length=200, verbose_name='Magazin')),
                ('info', models.TextField(blank=True)),
                ('erstausgabe', models.DateField(blank=True, null=True)),
                ('turnus', models.CharField(blank=True, choices=[('u', 'unbekannt'), ('t', 'täglich'), ('w', 'wöchentlich'), ('w2', 'zwei-wöchentlich'), ('m', 'monatlich'), ('m2', 'zwei-monatlich'), ('q', 'quartalsweise'), ('hj', 'halbjährlich'), ('j', 'jährlich')], default='u', max_length=200)),
                ('magazin_url', models.URLField(blank=True, verbose_name='Webpage')),
                ('beschreibung', models.TextField(blank=True)),
                ('ausgaben_merkmal', models.CharField(blank=True, choices=[('num', 'Nummer'), ('lnum', 'Lfd.Nummer'), ('monat', 'Monat'), ('e_datum', 'Ersch.Datum')], max_length=200)),
                ('genre', models.ManyToManyField(blank=True, through='DBentry.m2m_magazin_genre', to='DBentry.genre')),
            ],
            options={
                'verbose_name': 'Magazin',
                'ordering': ['magazin_name'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Magazine',
            },
        ),
        migrations.CreateModel(
            name='memorabilien',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Memorabilia',
                'permissions': [('alter_bestand_memorabilien', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'verbose_name_plural': 'Memorabilien',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='monat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monat', models.CharField(max_length=200, verbose_name='Monat')),
                ('abk', models.CharField(max_length=200, verbose_name='Abk')),
            ],
            options={
                'verbose_name': 'Monat',
                'ordering': ['id'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Monate',
            },
        ),
        migrations.CreateModel(
            name='musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kuenstler_name', models.CharField(max_length=200, verbose_name='Künstlername')),
                ('beschreibung', models.TextField(blank=True)),
                ('genre', models.ManyToManyField(through='DBentry.m2m_musiker_genre', to='DBentry.genre')),
                ('instrument', models.ManyToManyField(through='DBentry.m2m_musiker_instrument', to='DBentry.instrument')),
            ],
            options={
                'verbose_name': 'Musiker',
                'ordering': ['kuenstler_name', 'person'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Musiker',
            },
        ),
        migrations.CreateModel(
            name='musiker_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='NoiseRed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verfahren', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Noise Reduction Verfahren',
                'ordering': ['verfahren'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Noise Reduction Verfahren',
            },
        ),
        migrations.CreateModel(
            name='ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stadt', models.CharField(blank=True, max_length=200)),
                ('bland', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='DBentry.bundesland', verbose_name='Bundesland')),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.land', verbose_name='Land')),
            ],
            options={
                'verbose_name': 'Ort',
                'ordering': ['land', 'bland', 'stadt'],
                'verbose_name_plural': 'Orte',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vorname', models.CharField(blank=True, max_length=200)),
                ('nachname', models.CharField(default='unbekannt', max_length=200)),
                ('beschreibung', models.TextField(blank=True)),
                ('herkunft', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='DBentry.ort')),
            ],
            options={
                'verbose_name': 'Person',
                'ordering': ['nachname', 'vorname', 'herkunft'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Personen',
            },
        ),
        migrations.CreateModel(
            name='plattenfirma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Plattenfirma',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Plattenfirmen',
            },
        ),
        migrations.CreateModel(
            name='provenienz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.CharField(choices=[('Schenkung', 'Schenkung'), ('Spende', 'Spende'), ('Fund', 'Fund'), ('Leihgabe', 'Leihgabe'), ('Dauerleihgabe', 'Dauerleihgabe')], default='Schenkung', max_length=100, verbose_name='Art der Provenienz')),
                ('geber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.geber')),
            ],
            options={
                'verbose_name': 'Provenienz',
                'ordering': ['geber', 'typ'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Provenienzen',
            },
        ),
        migrations.CreateModel(
            name='schlagwort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schlagwort', models.CharField(max_length=100, unique=True)),
                ('ober', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='oberschl', to='DBentry.schlagwort', verbose_name='Oberbegriff')),
            ],
            options={
                'verbose_name': 'Schlagwort',
                'ordering': ['schlagwort'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Schlagwörter',
            },
        ),
        migrations.CreateModel(
            name='schlagwort_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.schlagwort')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='sender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Sender',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Sender',
            },
        ),
        migrations.CreateModel(
            name='sender_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.sender')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='spielort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('ort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort')),
            ],
            options={
                'verbose_name': 'Spielort',
                'ordering': ['name'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Spielorte',
            },
        ),
        migrations.CreateModel(
            name='spielort_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.spielort')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='sprache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sprache', models.CharField(max_length=200)),
                ('abk', models.CharField(max_length=3)),
            ],
            options={
                'verbose_name': 'Sprache',
                'ordering': ['sprache'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Sprachen',
            },
        ),
        migrations.CreateModel(
            name='technik',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Technik',
                'permissions': [('alter_bestand_technik', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'verbose_name_plural': 'Technik',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('datum', models.DateField()),
                ('band', models.ManyToManyField(through='DBentry.m2m_veranstaltung_band', to='DBentry.band', verbose_name='Teilnehmer (Bands)')),
                ('genre', models.ManyToManyField(through='DBentry.m2m_veranstaltung_genre', to='DBentry.genre')),
                ('ort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort')),
                ('person', models.ManyToManyField(through='DBentry.m2m_veranstaltung_person', to='DBentry.person', verbose_name='Teilnehmer (Personen)')),
                ('spielort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.spielort')),
            ],
            options={
                'verbose_name': 'Veranstaltung',
                'ordering': ['name', 'spielort', 'ort', 'datum'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Veranstaltungen',
            },
        ),
        migrations.CreateModel(
            name='veranstaltung_alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=100, verbose_name='Alias')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung')),
            ],
            options={
                'verbose_name': 'Alias',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.CreateModel(
            name='verlag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verlag_name', models.CharField(max_length=200, verbose_name='verlag')),
                ('sitz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.ort')),
            ],
            options={
                'verbose_name': 'Verlag',
                'ordering': ['verlag_name', 'sitz'],
                'default_permissions': ('add', 'change', 'delete', 'merge'),
                'abstract': False,
                'verbose_name_plural': 'Verlage',
            },
        ),
        migrations.CreateModel(
            name='video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('tracks', models.IntegerField()),
                ('laufzeit', models.TimeField()),
                ('festplatte', models.CharField(blank=True, max_length=200)),
                ('quelle', models.CharField(blank=True, max_length=200)),
                ('band', models.ManyToManyField(through='DBentry.m2m_video_band', to='DBentry.band')),
                ('genre', models.ManyToManyField(through='DBentry.m2m_video_genre', to='DBentry.genre')),
                ('musiker', models.ManyToManyField(through='DBentry.m2m_video_musiker', to='DBentry.musiker')),
                ('person', models.ManyToManyField(through='DBentry.m2m_video_person', to='DBentry.person')),
                ('schlagwort', models.ManyToManyField(through='DBentry.m2m_video_schlagwort', to='DBentry.schlagwort')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.sender')),
                ('spielort', models.ManyToManyField(through='DBentry.m2m_video_spielort', to='DBentry.spielort')),
                ('veranstaltung', models.ManyToManyField(through='DBentry.m2m_video_veranstaltung', to='DBentry.veranstaltung')),
            ],
            options={
                'verbose_name': 'Video Material',
                'permissions': [('alter_bestand_video', 'Aktion: Bestand/Dublette hinzufügen.')],
                'ordering': ['titel'],
                'verbose_name_plural': 'Video Materialien',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'merge'),
            },
        ),
        migrations.AddField(
            model_name='musiker',
            name='person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='magazin',
            name='ort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.ort', verbose_name='Hrsg.Ort'),
        ),
        migrations.AddField(
            model_name='magazin',
            name='verlag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='DBentry.verlag'),
        ),
        migrations.AddField(
            model_name='m2m_video_veranstaltung',
            name='veranstaltung',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='m2m_video_veranstaltung',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_video_spielort',
            name='spielort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.spielort'),
        ),
        migrations.AddField(
            model_name='m2m_video_spielort',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_video_schlagwort',
            name='schlagwort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='m2m_video_schlagwort',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_video_person',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='m2m_video_person',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_video_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_video_ort',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_video_musiker',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_video_musiker',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_video_genre',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_video_band',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_veranstaltung_person',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='m2m_veranstaltung_person',
            name='veranstaltung',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='m2m_veranstaltung_genre',
            name='veranstaltung',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='m2m_veranstaltung_band',
            name='veranstaltung',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='m2m_musiker_instrument',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_musiker_genre',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_memorabilien_ort',
            name='memorabilien',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.memorabilien'),
        ),
        migrations.AddField(
            model_name='m2m_memorabilien_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_magazin_genre',
            name='magazin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.magazin'),
        ),
        migrations.AddField(
            model_name='m2m_dokument_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_datei_veranstaltung',
            name='veranstaltung',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='m2m_datei_spielort',
            name='spielort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.spielort'),
        ),
        migrations.AddField(
            model_name='m2m_datei_schlagwort',
            name='schlagwort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='memorabilien',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.memorabilien'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_datei_person',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='m2m_datei_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_datei_musiker',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_buch_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_bildmaterial_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_band_musiker',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_autor_magazin',
            name='magazin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.magazin'),
        ),
        migrations.AddField(
            model_name='m2m_audio_veranstaltung',
            name='veranstaltung',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='m2m_audio_spielort',
            name='spielort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.spielort'),
        ),
        migrations.AddField(
            model_name='m2m_audio_schlagwort',
            name='schlagwort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='m2m_audio_plattenfirma',
            name='plattenfirma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.plattenfirma'),
        ),
        migrations.AddField(
            model_name='m2m_audio_person',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='m2m_audio_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_audio_musiker',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_artikel_veranstaltung',
            name='veranstaltung',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='m2m_artikel_spielort',
            name='spielort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.spielort'),
        ),
        migrations.AddField(
            model_name='m2m_artikel_schlagwort',
            name='schlagwort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='m2m_artikel_person',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='m2m_artikel_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_artikel_musiker',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='format',
            name='format_size',
            field=models.ForeignKey(blank=True, help_text='LP, 12", Mini-Disc, etc.', null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.FormatSize', verbose_name='Format Größe'),
        ),
        migrations.AddField(
            model_name='format',
            name='format_typ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.FormatTyp', verbose_name='Format Typ'),
        ),
        migrations.AddField(
            model_name='format',
            name='noise_red',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.NoiseRed', verbose_name='Noise Reduction'),
        ),
        migrations.AddField(
            model_name='format',
            name='tag',
            field=models.ManyToManyField(blank=True, to='DBentry.FormatTag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='favoriten',
            name='fav_genres',
            field=models.ManyToManyField(blank=True, to='DBentry.genre', verbose_name='Favoriten Genre'),
        ),
        migrations.AddField(
            model_name='favoriten',
            name='fav_schl',
            field=models.ManyToManyField(blank=True, to='DBentry.schlagwort', verbose_name='Favoriten Schlagworte'),
        ),
        migrations.AddField(
            model_name='favoriten',
            name='user',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='datei',
            name='band',
            field=models.ManyToManyField(through='DBentry.m2m_datei_band', to='DBentry.band'),
        ),
        migrations.AddField(
            model_name='datei',
            name='genre',
            field=models.ManyToManyField(through='DBentry.m2m_datei_genre', to='DBentry.genre'),
        ),
        migrations.AddField(
            model_name='datei',
            name='musiker',
            field=models.ManyToManyField(through='DBentry.m2m_datei_musiker', to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='datei',
            name='ort',
            field=models.ManyToManyField(through='DBentry.m2m_datei_ort', to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='person',
            field=models.ManyToManyField(through='DBentry.m2m_datei_person', to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='datei',
            name='provenienz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.provenienz'),
        ),
        migrations.AddField(
            model_name='datei',
            name='schlagwort',
            field=models.ManyToManyField(through='DBentry.m2m_datei_schlagwort', to='DBentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='sender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.sender'),
        ),
        migrations.AddField(
            model_name='datei',
            name='spielort',
            field=models.ManyToManyField(through='DBentry.m2m_datei_spielort', to='DBentry.spielort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='veranstaltung',
            field=models.ManyToManyField(through='DBentry.m2m_datei_veranstaltung', to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='bundesland',
            name='land',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.land', verbose_name='Land'),
        ),
        migrations.AddField(
            model_name='buch',
            name='autor',
            field=models.ManyToManyField(through='DBentry.m2m_buch_autor', to='DBentry.autor'),
        ),
        migrations.AddField(
            model_name='buch',
            name='buch_serie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.buch_serie', verbose_name='Buchserie'),
        ),
        migrations.AddField(
            model_name='buch',
            name='sprache',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buchsprache', to='DBentry.sprache'),
        ),
        migrations.AddField(
            model_name='buch',
            name='sprache_orig',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buchspracheorig', to='DBentry.sprache', verbose_name='Sprache (Original)'),
        ),
        migrations.AddField(
            model_name='buch',
            name='verlag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buchverlag', to='DBentry.verlag'),
        ),
        migrations.AddField(
            model_name='buch',
            name='verlag_orig',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='buchverlagorig', to='DBentry.verlag', verbose_name='Verlag (Original)'),
        ),
        migrations.AddField(
            model_name='bestand',
            name='bildmaterial',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.bildmaterial'),
        ),
        migrations.AddField(
            model_name='bestand',
            name='buch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.buch'),
        ),
        migrations.AddField(
            model_name='bestand',
            name='dokument',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.dokument'),
        ),
        migrations.AddField(
            model_name='bestand',
            name='lagerort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.lagerort'),
        ),
        migrations.AddField(
            model_name='bestand',
            name='memorabilien',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.memorabilien'),
        ),
        migrations.AddField(
            model_name='bestand',
            name='provenienz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.provenienz'),
        ),
        migrations.AddField(
            model_name='bestand',
            name='technik',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.technik'),
        ),
        migrations.AddField(
            model_name='bestand',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='band',
            name='genre',
            field=models.ManyToManyField(through='DBentry.m2m_band_genre', to='DBentry.genre'),
        ),
        migrations.AddField(
            model_name='band',
            name='herkunft',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='band',
            name='musiker',
            field=models.ManyToManyField(through='DBentry.m2m_band_musiker', to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='autor',
            name='magazin',
            field=models.ManyToManyField(blank=True, through='DBentry.m2m_autor_magazin', to='DBentry.magazin'),
        ),
        migrations.AddField(
            model_name='autor',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='ausgabe_monat',
            name='monat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.monat'),
        ),
        migrations.AddField(
            model_name='ausgabe',
            name='audio',
            field=models.ManyToManyField(blank=True, through='DBentry.m2m_audio_ausgabe', to='DBentry.audio'),
        ),
        migrations.AddField(
            model_name='ausgabe',
            name='magazin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.magazin', verbose_name='Magazin'),
        ),
        migrations.AddField(
            model_name='audio',
            name='band',
            field=models.ManyToManyField(through='DBentry.m2m_audio_band', to='DBentry.band'),
        ),
        migrations.AddField(
            model_name='audio',
            name='genre',
            field=models.ManyToManyField(through='DBentry.m2m_audio_genre', to='DBentry.genre'),
        ),
        migrations.AddField(
            model_name='audio',
            name='musiker',
            field=models.ManyToManyField(through='DBentry.m2m_audio_musiker', to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='audio',
            name='ort',
            field=models.ManyToManyField(through='DBentry.m2m_audio_ort', to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='audio',
            name='person',
            field=models.ManyToManyField(through='DBentry.m2m_audio_person', to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='audio',
            name='plattenfirma',
            field=models.ManyToManyField(through='DBentry.m2m_audio_plattenfirma', to='DBentry.plattenfirma'),
        ),
        migrations.AddField(
            model_name='audio',
            name='schlagwort',
            field=models.ManyToManyField(through='DBentry.m2m_audio_schlagwort', to='DBentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='audio',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='Name des Radio-/Fernsehsenders', null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.sender'),
        ),
        migrations.AddField(
            model_name='audio',
            name='spielort',
            field=models.ManyToManyField(through='DBentry.m2m_audio_spielort', to='DBentry.spielort'),
        ),
        migrations.AddField(
            model_name='audio',
            name='veranstaltung',
            field=models.ManyToManyField(through='DBentry.m2m_audio_veranstaltung', to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='ausgabe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.ausgabe'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='autor',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_autor', to='DBentry.autor'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='band',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_band', to='DBentry.band'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='genre',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_genre', to='DBentry.genre', verbose_name='Genre'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='musiker',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_musiker', to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='ort',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_ort', to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='person',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_person', to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='schlagwort',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_schlagwort', to='DBentry.schlagwort', verbose_name='Schlagwort'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='spielort',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_spielort', to='DBentry.spielort'),
        ),
        migrations.AddField(
            model_name='artikel',
            name='veranstaltung',
            field=models.ManyToManyField(through='DBentry.m2m_artikel_veranstaltung', to='DBentry.veranstaltung'),
        ),
        migrations.AlterUniqueTogether(
            name='ort',
            unique_together=set([('stadt', 'bland', 'land')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_veranstaltung',
            unique_together=set([('video', 'veranstaltung')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_spielort',
            unique_together=set([('video', 'spielort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_schlagwort',
            unique_together=set([('video', 'schlagwort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_person',
            unique_together=set([('video', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_ort',
            unique_together=set([('video', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_musiker',
            unique_together=set([('video', 'musiker')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_genre',
            unique_together=set([('video', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_band',
            unique_together=set([('video', 'band')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_veranstaltung_person',
            unique_together=set([('veranstaltung', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_veranstaltung_genre',
            unique_together=set([('veranstaltung', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_veranstaltung_band',
            unique_together=set([('veranstaltung', 'band')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_musiker_instrument',
            unique_together=set([('musiker', 'instrument')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_musiker_genre',
            unique_together=set([('musiker', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_memorabilien_ort',
            unique_together=set([('memorabilien', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_magazin_genre',
            unique_together=set([('magazin', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_dokument_ort',
            unique_together=set([('dokument', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_veranstaltung',
            unique_together=set([('datei', 'veranstaltung')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_spielort',
            unique_together=set([('datei', 'spielort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_schlagwort',
            unique_together=set([('datei', 'schlagwort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_person',
            unique_together=set([('datei', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_ort',
            unique_together=set([('datei', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_musiker',
            unique_together=set([('datei', 'musiker')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_genre',
            unique_together=set([('datei', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_band',
            unique_together=set([('datei', 'band')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_buch_ort',
            unique_together=set([('buch', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_buch_autor',
            unique_together=set([('buch', 'autor')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_bildmaterial_ort',
            unique_together=set([('bildmaterial', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_band_musiker',
            unique_together=set([('band', 'musiker')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_band_genre',
            unique_together=set([('band', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_autor_magazin',
            unique_together=set([('autor', 'magazin')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_veranstaltung',
            unique_together=set([('audio', 'veranstaltung')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_spielort',
            unique_together=set([('audio', 'spielort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_schlagwort',
            unique_together=set([('audio', 'schlagwort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_person',
            unique_together=set([('audio', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_ort',
            unique_together=set([('audio', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_musiker',
            unique_together=set([('audio', 'musiker')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_genre',
            unique_together=set([('audio', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_band',
            unique_together=set([('audio', 'band')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_ausgabe',
            unique_together=set([('audio', 'ausgabe')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_veranstaltung',
            unique_together=set([('artikel', 'veranstaltung')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_spielort',
            unique_together=set([('artikel', 'spielort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_schlagwort',
            unique_together=set([('artikel', 'schlagwort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_person',
            unique_together=set([('artikel', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_ort',
            unique_together=set([('artikel', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_musiker',
            unique_together=set([('artikel', 'musiker')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_genre',
            unique_together=set([('artikel', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_band',
            unique_together=set([('artikel', 'band')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_artikel_autor',
            unique_together=set([('artikel', 'autor')]),
        ),
        migrations.AlterUniqueTogether(
            name='bundesland',
            unique_together=set([('bland_name', 'land')]),
        ),
        migrations.AlterUniqueTogether(
            name='ausgabe_num',
            unique_together=set([('num', 'ausgabe', 'kuerzel')]),
        ),
        migrations.AlterUniqueTogether(
            name='ausgabe_monat',
            unique_together=set([('ausgabe', 'monat')]),
        ),
        migrations.AlterUniqueTogether(
            name='ausgabe_lnum',
            unique_together=set([('lnum', 'ausgabe', 'kuerzel')]),
        ),
        migrations.AlterUniqueTogether(
            name='ausgabe_jahr',
            unique_together=set([('jahr', 'ausgabe')]),
        ),
    ]
