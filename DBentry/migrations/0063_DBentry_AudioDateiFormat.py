# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-09-15 09:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('DBentry', '0062_DBentry_AVm2m'),
    ]

    operations = [
        migrations.CreateModel(
            name='datei',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=200)),
                ('media_typ', models.CharField(choices=[('audio', 'Audio'), ('video', 'Video'), ('bild', 'Bild'), ('text', 'Text'), ('sonstige', 'Sonstige')], default='audio', max_length=200, verbose_name='Media Typ')),
                ('datei_media', models.FileField(blank=True, help_text='Datei auf Datenbank-Server hoch- bzw herunterladen.', null=True, upload_to='', verbose_name='Datei')),
                ('datei_pfad', models.CharField(blank=True, help_text='Pfad (inklusive Datei-Namen und Endung) zur Datei im gemeinsamen Ordner.', max_length=200, verbose_name='Datei-Pfad')),
                ('beschreibung', models.TextField(blank=True)),
                ('datum', models.DateField(blank=True, null=True)),
                ('bemerkungen', models.TextField(blank=True)),
                ('quelle', models.CharField(blank=True, help_text='z.B. Broadcast, Live, etc.', max_length=200)),
            ],
            options={
                'verbose_name': 'Datei',
                'verbose_name_plural': 'Dateien',
            },
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format_name', models.CharField(blank=True, editable=False, max_length=200)),
                ('anzahl', models.PositiveSmallIntegerField(default=1)),
                ('catalog_nr', models.CharField(blank=True, max_length=200, verbose_name='Katalog Nummer')),
                ('tape', models.CharField(blank=True, max_length=200)),
                ('channel', models.CharField(blank=True, choices=[('Stereo', 'Stereo'), ('Mono', 'Mono'), ('Quadraphonic', 'Quadraphonic'), ('Ambisonic', 'Ambisonic'), ('Multichannel', 'Multichannel')], max_length=200)),
                ('bemerkungen', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Format',
                'verbose_name_plural': 'Formate',
            },
        ),
        migrations.CreateModel(
            name='FormatSize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormatTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=200)),
                ('abk', models.CharField(blank=True, max_length=200, verbose_name='Abk√ºrzung')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='FormatTyp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_format',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Audio-Format',
                'verbose_name_plural': 'Audio-Formate',
                'db_table': 'DBentry_audio_format',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Audio-Ort',
                'verbose_name_plural': 'Audio-Orte',
                'db_table': 'DBentry_audio_ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_audio_plattenfirma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Audio-Plattenfirma',
                'verbose_name_plural': 'Audio-Plattenfirmen',
                'db_table': 'DBentry_audio_plattenfirma',
            },
        ),
        migrations.CreateModel(
            name='m2m_bildmaterial_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bildmaterial', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.bildmaterial')),
                ('ort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.ort')),
            ],
            options={
                'verbose_name': 'Bildmaterial-Ort',
                'verbose_name_plural': 'Bildmaterial-Orte',
                'db_table': 'DBentry_bildmaterial_ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_buch_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.buch')),
                ('ort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.ort')),
            ],
            options={
                'verbose_name': 'buch-Ort',
                'verbose_name_plural': 'buch-Orte',
                'db_table': 'DBentry_buch_ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.band')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
            ],
            options={
                'verbose_name': 'Datei-Band',
                'verbose_name_plural': 'Datei-Bands',
                'db_table': 'DBentry_datei_band',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.genre')),
            ],
            options={
                'verbose_name': 'Datei-Genre',
                'verbose_name_plural': 'Datei-Genres',
                'db_table': 'DBentry_datei_genre',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_musiker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
            ],
            options={
                'verbose_name': 'Datei-Musiker',
                'verbose_name_plural': 'Datei-Musiker',
                'db_table': 'DBentry_datei_musiker',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('ort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.ort')),
            ],
            options={
                'verbose_name': 'Datei-Ort',
                'verbose_name_plural': 'Datei-Orte',
                'db_table': 'DBentry_datei_ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.person')),
            ],
            options={
                'verbose_name': 'Datei-Person',
                'verbose_name_plural': 'Datei-Personen',
                'db_table': 'DBentry_datei_person',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_quelle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Datei-Quelle',
                'verbose_name_plural': 'Datei-Quellen',
                'db_table': 'DBentry_datei_quelle',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_schlagwort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('schlagwort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.schlagwort')),
            ],
            options={
                'verbose_name': 'Datei-Schlagwort',
                'verbose_name_plural': 'Datei-Schlagw√∂rter',
                'db_table': 'DBentry_datei_schlagwort',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_spielort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('spielort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.spielort')),
            ],
            options={
                'verbose_name': 'Datei-Spielort',
                'verbose_name_plural': 'Datei-Spielorte',
                'db_table': 'DBentry_datei_spielort',
            },
        ),
        migrations.CreateModel(
            name='m2m_datei_veranstaltung',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datei', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei')),
                ('veranstaltung', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.veranstaltung')),
            ],
            options={
                'verbose_name': 'Datei-Veranstaltung',
                'verbose_name_plural': 'Datei-Veranstaltungen',
                'db_table': 'DBentry_datei_veranstaltung',
            },
        ),
        migrations.CreateModel(
            name='m2m_dokument_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dokument', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.dokument')),
                ('ort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.ort')),
            ],
            options={
                'verbose_name': 'dokument-Ort',
                'verbose_name_plural': 'dokument-Orte',
                'db_table': 'DBentry_dokument_ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_memorabilien_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memorabilien', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.memorabilien')),
                ('ort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.ort')),
            ],
            options={
                'verbose_name': 'memorabilien-Ort',
                'verbose_name_plural': 'memorabilien-Orte',
                'db_table': 'DBentry_memorabilien_ort',
            },
        ),
        migrations.CreateModel(
            name='m2m_video_ort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ort', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.ort')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.video')),
            ],
            options={
                'verbose_name': 'Video-Ort',
                'verbose_name_plural': 'Video-Orte',
                'db_table': 'DBentry_video_ort',
            },
        ),
        migrations.CreateModel(
            name='NoiseRed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verfahren', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='plattenfirma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='audio',
            name='festplatte',
        ),
        migrations.AddField(
            model_name='audio',
            name='bemerkungen',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='audio',
            name='catalog_nr',
            field=models.CharField(blank=True, max_length=200, verbose_name='Katalog Nummer'),
        ),
        migrations.AddField(
            model_name='audio',
            name='discogs_url',
            field=models.URLField(blank=True, null=True, verbose_name='Link discogs.com'),
        ),
        migrations.AddField(
            model_name='audio',
            name='e_jahr',
            field=models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Erscheinungsjahr'),
        ),
        migrations.AddField(
            model_name='audio',
            name='release_id',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Release ID (discogs)'),
        ),
        migrations.AddField(
            model_name='m2m_audio_musiker',
            name='instrument',
            field=models.ManyToManyField(blank=True, to='DBentry.instrument', verbose_name='Instrumente'),
        ),
        migrations.AlterField(
            model_name='audio',
            name='laufzeit',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='audio',
            name='quelle',
            field=models.CharField(blank=True, help_text='Broadcast, Live, etc.', max_length=200),
        ),
        migrations.AlterField(
            model_name='audio',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='Name des Radio-/Fernsehsenders', null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.sender'),
        ),
        migrations.AlterField(
            model_name='audio',
            name='tracks',
            field=models.IntegerField(blank=True, null=True, verbose_name='Anz. Tracks'),
        ),
        migrations.AlterField(
            model_name='instrument',
            name='kuerzel',
            field=models.CharField(max_length=200, verbose_name='K√ºrzel'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='audio',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.audio'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='bildmaterial',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.bildmaterial'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='buch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.buch'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='datei',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.datei'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='dokument',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.dokument'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='memorabilien',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.memorabilien'),
        ),
        migrations.AddField(
            model_name='m2m_datei_quelle',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.video'),
        ),
        migrations.AddField(
            model_name='m2m_datei_musiker',
            name='instrument',
            field=models.ManyToManyField(blank=True, to='DBentry.instrument', verbose_name='Instrumente'),
        ),
        migrations.AddField(
            model_name='m2m_datei_musiker',
            name='musiker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='m2m_audio_plattenfirma',
            name='audio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio'),
        ),
        migrations.AddField(
            model_name='m2m_audio_plattenfirma',
            name='plattenfirma',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.plattenfirma'),
        ),
        migrations.AddField(
            model_name='m2m_audio_ort',
            name='audio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.audio'),
        ),
        migrations.AddField(
            model_name='m2m_audio_ort',
            name='ort',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='m2m_audio_format',
            name='audio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio'),
        ),
        migrations.AddField(
            model_name='m2m_audio_format',
            name='format',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.Format'),
        ),
        migrations.AddField(
            model_name='format',
            name='audio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.audio'),
        ),
        migrations.AddField(
            model_name='format',
            name='format_size',
            field=models.ForeignKey(blank=True, help_text='LP, 12", Mini-Disc, etc.', null=True, on_delete=django.db.models.deletion.CASCADE, to='DBentry.FormatSize', verbose_name='Format Gr√∂√üe'),
        ),
        migrations.AddField(
            model_name='format',
            name='format_typ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DBentry.FormatTyp', verbose_name='Format Typ'),
        ),
        migrations.AddField(
            model_name='format',
            name='noise_red',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.NoiseRed', verbose_name='Noise Reduction'),
        ),
        migrations.AddField(
            model_name='format',
            name='tag',
            field=models.ManyToManyField(blank=True, to='DBentry.FormatTag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='datei',
            name='band',
            field=models.ManyToManyField(through='DBentry.m2m_datei_band', to='DBentry.band'),
        ),
        migrations.AddField(
            model_name='datei',
            name='genre',
            field=models.ManyToManyField(through='DBentry.m2m_datei_genre', to='DBentry.genre'),
        ),
        migrations.AddField(
            model_name='datei',
            name='musiker',
            field=models.ManyToManyField(through='DBentry.m2m_datei_musiker', to='DBentry.musiker'),
        ),
        migrations.AddField(
            model_name='datei',
            name='ort',
            field=models.ManyToManyField(through='DBentry.m2m_datei_ort', to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='person',
            field=models.ManyToManyField(through='DBentry.m2m_datei_person', to='DBentry.person'),
        ),
        migrations.AddField(
            model_name='datei',
            name='provenienz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.provenienz'),
        ),
        migrations.AddField(
            model_name='datei',
            name='schlagwort',
            field=models.ManyToManyField(through='DBentry.m2m_datei_schlagwort', to='DBentry.schlagwort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='sender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='DBentry.sender'),
        ),
        migrations.AddField(
            model_name='datei',
            name='spielort',
            field=models.ManyToManyField(through='DBentry.m2m_datei_spielort', to='DBentry.spielort'),
        ),
        migrations.AddField(
            model_name='datei',
            name='veranstaltung',
            field=models.ManyToManyField(through='DBentry.m2m_datei_veranstaltung', to='DBentry.veranstaltung'),
        ),
        migrations.AddField(
            model_name='audio',
            name='ort',
            field=models.ManyToManyField(through='DBentry.m2m_audio_ort', to='DBentry.ort'),
        ),
        migrations.AddField(
            model_name='audio',
            name='plattenfirma',
            field=models.ManyToManyField(through='DBentry.m2m_audio_plattenfirma', to='DBentry.plattenfirma'),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_video_ort',
            unique_together=set([('video', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_memorabilien_ort',
            unique_together=set([('memorabilien', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_dokument_ort',
            unique_together=set([('dokument', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_veranstaltung',
            unique_together=set([('datei', 'veranstaltung')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_spielort',
            unique_together=set([('datei', 'spielort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_schlagwort',
            unique_together=set([('datei', 'schlagwort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_person',
            unique_together=set([('datei', 'person')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_ort',
            unique_together=set([('datei', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_musiker',
            unique_together=set([('datei', 'musiker')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_genre',
            unique_together=set([('datei', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_datei_band',
            unique_together=set([('datei', 'band')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_buch_ort',
            unique_together=set([('buch', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_bildmaterial_ort',
            unique_together=set([('bildmaterial', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_ort',
            unique_together=set([('audio', 'ort')]),
        ),
        migrations.AlterUniqueTogether(
            name='m2m_audio_format',
            unique_together=set([('audio', 'format')]),
        ),
    ]
